import { Theme, AnimationSettings } from "../theme.slint";

export component StateLayer {
    in property <length> border-radius: 4px;
    in property <length> border-bottom-left-radius: 0px;
    in property <length> border-bottom-right-radius: 0px;
    in property <length> border-top-left-radius: 0px;
    in property <length> border-top-right-radius: 0px;
    in property <length> border-width: 2px;
    in property <brush> hover-color: Theme.hover-tint;
    in property <brush> pressed-color: Theme.pressed-tint;
    in property <brush> border-color: Theme.background-control-primary-dark;
    in property <brush> border-color-focused: Theme.background-control-primary-dark;
    in property <bool> enabled;
    in property <bool> pressed;
    in property <bool> has-hover;
    in property <bool> has-focus;

    state-layer := Rectangle {
        border-width <=> root.border-width;
        border-radius <=> root.border-radius;
        border-bottom-left-radius: root.border-radius + root.border-bottom-left-radius;
        border-bottom-right-radius: root.border-radius + root.border-bottom-right-radius;
        border-top-left-radius: root.border-radius + root.border-top-left-radius;
        border-top-right-radius: root.border-radius + root.border-top-right-radius;

        animate border-color { duration: AnimationSettings.color-duration; }
        animate background { duration: AnimationSettings.color-duration; }
    }

    states [
        pressed when root.pressed: {
            state-layer.background: root.pressed-color;
            state-layer.border-color: root.border-color;
        }
        hovered when root.has-hover || !root.enabled: {
            state-layer.background: root.hover-color;
            state-layer.border-color: root.border-color;
        }
    ]
}
