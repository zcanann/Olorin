import { Theme, AnimationSettings } from "../theme.slint";

export component StateLayer {
    in property <length> border_radius: 4px;
    in property <length> border_bottom_left_radius: 0px;
    in property <length> border_bottom_right_radius: 0px;
    in property <length> border_top_left_radius: 0px;
    in property <length> border_top_right_radius: 0px;
    in property <length> border_width: 0px;
    in property <brush> hover_color: Theme.hover_tint;
    in property <brush> pressed_color: Theme.pressed_tint;
    in property <brush> border_color: Theme.background_control_primary_dark;
    in property <brush> border_color_focused: Theme.background_control_primary_dark;
    in property <bool> enabled;
    in property <bool> pressed;
    in property <bool> has_hover;
    in property <bool> has_focus;
    state_layer := Rectangle {
        border_width <=> root.border_width;
        border_radius <=> root.border_radius;
        border_bottom_left_radius: root.border_radius + root.border_bottom_left_radius;
        border_bottom_right_radius: root.border_radius + root.border_bottom_right_radius;
        border_top_left_radius: root.border_radius + root.border_top_left_radius;
        border_top_right_radius: root.border_radius + root.border_top_right_radius;
        animate border_color { duration: AnimationSettings.color_duration; }
        animate background { duration: AnimationSettings.color_duration; }
    }

    states [
        pressed when root.pressed: {
            state_layer.background: root.pressed_color;
            state_layer.border_color: root.border_color;
        }
        hovered when root.has_hover || !root.enabled: {
            state_layer.background: root.hover_color;
            state_layer.border_color: root.border_color;
        }
    ]
}
