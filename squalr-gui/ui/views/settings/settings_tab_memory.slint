import { Theme } from "../../theme.slint";

import { ScanSettingsViewModelBindings, MemorySettingsViewModelBindings } from "../../view_model_bindings.slint";

import { GroupBox } from "../../components/groupbox.slint";
import { Button } from "../../components/buttons/button.slint";
import { TextField } from "../../components/input/text_field.slint";
import { Checkbox } from "../../components/checkboxes/checkbox.slint";
import { TextCheckbox } from "../../components/checkboxes/text_checkbox.slint";
import { BevelButton } from "../../components/buttons/bevel_button.slint";

export component SettingsTabMemory inherits Rectangle {
    GridLayout {
        padding: 8px;
        spacing: 8px;
        Row {
            GroupBox {
                header_text: "Required Protection Flags";
                VerticalLayout {
                    alignment: start;
                    padding: 0px;
                    spacing: 6px;
                    TextCheckbox {
                        text: @tr("Write");
                        is_checked <=> MemorySettingsViewModelBindings.required_write;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.required_write = value;
                            MemorySettingsViewModelBindings.required_write_changed(value);
                        }
                    }

                    TextCheckbox {
                        text: @tr("Execute");
                        is_checked <=> MemorySettingsViewModelBindings.required_execute;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.required_execute = value;
                            MemorySettingsViewModelBindings.required_execute_changed(value);
                        }
                    }

                    TextCheckbox {
                        text: @tr("Copy on Write");
                        is_checked <=> MemorySettingsViewModelBindings.required_copy_on_write;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.required_copy_on_write = value;
                            MemorySettingsViewModelBindings.required_copy_on_write_changed(value);
                        }
                    }
                }
            }

            GroupBox {
                header_text: "Excluded Protection Flags";
                VerticalLayout {
                    alignment: start;
                    padding: 0px;
                    spacing: 6px;
                    TextCheckbox {
                        text: @tr("Write");
                        is_checked <=> MemorySettingsViewModelBindings.excluded_write;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.excluded_write = value;
                            MemorySettingsViewModelBindings.excluded_write_changed(value);
                        }
                    }

                    TextCheckbox {
                        text: @tr("Execute");
                        is_checked <=> MemorySettingsViewModelBindings.excluded_execute;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.excluded_execute = value;
                            MemorySettingsViewModelBindings.excluded_execute_changed(value);
                        }
                    }

                    TextCheckbox {
                        text: @tr("Copy on Write");
                        is_checked <=> MemorySettingsViewModelBindings.excluded_copy_on_write;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.excluded_copy_on_write = value;
                            MemorySettingsViewModelBindings.excluded_copy_on_write_changed(value);
                        }
                    }
                }
            }
        }

        Row {
            GroupBox {
                header_text: "Memory Types";
                VerticalLayout {
                    alignment: start;
                    padding: 0px;
                    spacing: 6px;
                    TextCheckbox {
                        text: @tr("None");
                        is_checked <=> MemorySettingsViewModelBindings.memory_type_none;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.memory_type_none = value;
                            MemorySettingsViewModelBindings.memory_type_none_changed(value);
                        }
                    }

                    TextCheckbox {
                        text: @tr("Image");
                        is_checked <=> MemorySettingsViewModelBindings.memory_type_image;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.memory_type_image = value;
                            MemorySettingsViewModelBindings.memory_type_image_changed(value);
                        }
                    }

                    TextCheckbox {
                        text: @tr("Private");
                        is_checked <=> MemorySettingsViewModelBindings.memory_type_private;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.memory_type_private = value;
                            MemorySettingsViewModelBindings.memory_type_private_changed(value);
                        }
                    }

                    TextCheckbox {
                        text: @tr("Mapped");
                        is_checked <=> MemorySettingsViewModelBindings.memory_type_mapped;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.memory_type_mapped = value;
                            MemorySettingsViewModelBindings.memory_type_mapped_changed(value);
                        }
                    }
                }
            }

            GroupBox {
                header_text: "Virtual Memory Querying";
                VerticalLayout {
                    alignment: start;
                    padding: 0px;
                    spacing: 6px;
                    TextCheckbox {
                        text: @tr("Query All Memory");
                        is_checked <=> MemorySettingsViewModelBindings.only_query_usermode;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.only_query_usermode = value;
                            MemorySettingsViewModelBindings.only_query_usermode_changed(value);
                        }
                    }

                    TextCheckbox {
                        text: @tr("Query All Usermode Memory");
                        is_checked <=> MemorySettingsViewModelBindings.only_query_usermode;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.only_query_usermode = value;
                            MemorySettingsViewModelBindings.only_query_usermode_changed(value);
                        }
                    }

                    TextCheckbox {
                        text: @tr("Query Custom Range");
                        is_checked <=> MemorySettingsViewModelBindings.only_query_usermode;
                        check_changed(value) => {
                            MemorySettingsViewModelBindings.only_query_usermode = value;
                            MemorySettingsViewModelBindings.only_query_usermode_changed(value);
                        }
                    }
                }
            }
        }
    }
}
