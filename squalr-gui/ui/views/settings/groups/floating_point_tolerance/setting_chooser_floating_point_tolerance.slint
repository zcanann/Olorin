import { Theme } from "../../../../theme.slint";

import { SettingChooserFloatingPointToleranceEntry } from "setting_chooser_floating_point_tolerance_entry.slint";
import { ConversionsViewModelBindings, ScanSettingsViewModelBindings, FloatingPointToleranceView } from "../../../../view_model_bindings.slint";
import { FloatingPointToleranceIconConverter } from "../../../../converters/floating_point_tolerance_icon_converter.slint";
import { IconConverter } from "../../../../converters/icon_converter.slint";
import { Button } from "../../../../components/buttons/button.slint";
import { ContextMenu } from "../../../../components/context_menu/context_menu.slint";

export component SettingChooserFloatingPointTolerance inherits Rectangle {
    floating_point_tolerance_icon_converter := FloatingPointToleranceIconConverter { }

    icon_converter := IconConverter { }

    HorizontalLayout {
        padding: 0px;
        spacing: 0px;
        floating_point_tolerance_dropdown_button := Button {
            height: 24px;
            clicked => {
                floating_point_tolerance_context_menu.show();
            }
            Rectangle {
                background: Theme.background_control;
                border_color: Theme.submenu_border;
                border_width: 1px;
                border_radius: 1px;
                VerticalLayout {
                    alignment: center;
                    HorizontalLayout {
                        padding_left: 4px;
                        padding_right: 8px;
                        alignment: start;
                        spacing: 8px;
                        Image {
                            width: 16px;
                            height: 16px;
                            horizontal_alignment: center;
                            vertical_alignment: center;
                            source: icon_converter.icon_view_to_image(floating_point_tolerance_icon_converter.floating_point_tolerance_to_icon_view(ScanSettingsViewModelBindings.floating_point_tolerance));
                        }

                        Text {
                            color: Theme.foreground;
                            horizontal_alignment: left;
                            vertical_alignment: center;
                            text: ConversionsViewModelBindings.get_floating_point_tolerance_string(ScanSettingsViewModelBindings.floating_point_tolerance);
                        }
                    }
                }
            }

            HorizontalLayout {
                alignment: end;
                padding_right: 4px;
                Image {
                    source: @image_url("../../../../images/navigation/down_arrow_small.png");
                }
            }

            HorizontalLayout {
                alignment: end;
                padding_right: 24px;
                Rectangle {
                    background: Theme.submenu_border;
                    width: 1px;
                }
            }
        }
    }

    floating_point_tolerance_context_menu := ContextMenu {
        close_policy: close_on_click_outside;
        x: floating_point_tolerance_dropdown_button.x;
        y: floating_point_tolerance_dropdown_button.y + floating_point_tolerance_dropdown_button.height;
        Rectangle {
            background: Theme.background_control;
            border_color: Theme.submenu_border;
            border_width: 1px;
            min_width: floating_point_tolerance_dropdown_button.width - self.border_width * 2 + 8px;
            VerticalLayout {
                padding: 0px;
                spacing: 0px;
                SettingChooserFloatingPointToleranceEntry {
                    floating_point_tolerance: FloatingPointToleranceView.tolerance_10e1;
                    onClicked => {
                        floating_point_tolerance_context_menu.close();
                    }
                }

                SettingChooserFloatingPointToleranceEntry {
                    floating_point_tolerance: FloatingPointToleranceView.tolerance_10e2;
                    onClicked => {
                        floating_point_tolerance_context_menu.close();
                    }
                }

                SettingChooserFloatingPointToleranceEntry {
                    floating_point_tolerance: FloatingPointToleranceView.tolerance_10e3;
                    onClicked => {
                        floating_point_tolerance_context_menu.close();
                    }
                }

                SettingChooserFloatingPointToleranceEntry {
                    floating_point_tolerance: FloatingPointToleranceView.tolerance_10e4;
                    onClicked => {
                        floating_point_tolerance_context_menu.close();
                    }
                }

                SettingChooserFloatingPointToleranceEntry {
                    floating_point_tolerance: FloatingPointToleranceView.tolerance_10e5;
                    onClicked => {
                        floating_point_tolerance_context_menu.close();
                    }
                }

                SettingChooserFloatingPointToleranceEntry {
                    floating_point_tolerance: FloatingPointToleranceView.tolerance_epsilon;
                    onClicked => {
                        floating_point_tolerance_context_menu.close();
                    }
                }
            }
        }
    }
}
