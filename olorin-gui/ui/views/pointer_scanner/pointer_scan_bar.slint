import { Theme } from "../../theme.slint";

import { Button } from "../../components/buttons/button.slint";
import { TextField } from "../../components/input/text_field.slint";
import { ProcessQuickSelector } from "../process_selector/process_quick_selector.slint";
import { DataTypeSelector } from "../../controls/data_type_selector.slint";
import { ScanConstraintTypeSelector } from "../../controls/scan_constraint_selector.slint";
import { DockFocusCatcher } from "../docking/drag_and_drop/dock_focus_catcher.slint";
import { DataValueBoxOwned } from "../../components/data_value_box/data_value_box_owned.slint";
import { DisplayValueTypeView, ValueCollectorViewModelBindings, ValidationViewModelBindings, PointerScannerViewModelBindings, ScanSettingsViewModelBindings } from "../../view_model_bindings.slint";

export component PointerScanBarView inherits Rectangle {
    property <length> bar_height: 28px;
    property <length> bar_spacing: 4px;
    property <length> bottom_padding: 4px;
    property <length> flow_break_point: 800px;
    height: bar_height + root.bottom_padding;
    background: Theme.background_primary;
    // Shortcut
    top_bar := HorizontalLayout {
        x: 0px;
        y: 0px;
        alignment: start;
        height: bar_height;
        padding_left: 4px;
        padding_right: 0px;
        padding_top: 0px;
        spacing: 4px;
        new_scan_button := Button {
            height: bar_height;
            width: 36px;
            tooltip_text: @tr("Reset Scan");
            click_sound: "";
            clicked => {
                PointerScannerViewModelBindings.reset_scan();
            }
            Image {
                width: 16px;
                height: 16px;
                horizontal_alignment: center;
                vertical_alignment: center;
                source: @image_url("../../images/app/scans/scan_new.png");
            }
        }

        collect_values_button := Button {
            height: bar_height;
            width: 36px;
            tooltip_text: @tr("Collect Values");
            click_sound: "";
            clicked => {
                ValueCollectorViewModelBindings.collect_values();
            }
            Image {
                width: 16px;
                height: 16px;
                horizontal_alignment: center;
                vertical_alignment: center;
                source: @image_url("../../images/app/scans/scan_collect_values.png");
            }
        }

        scan_constraint_selector := ScanConstraintTypeSelector {
            height: bar_height;
        }

        scan_value := DataValueBoxOwned {
            data_value <=> PointerScannerViewModelBindings.active_data_value;
            height: bar_height;
            text_padding_top: 0px;
            text_padding_bottom: 0px;
            width: 192px;
            preview_text: @tr("Enter a scan value...");
        }

        data_type_selector := DataTypeSelector {
            height: bar_height;
        }

        start_scan_button := Button {
            height: bar_height;
            width: 36px;
            tooltip_text: @tr("Start Scan");
            click_sound: "";
            clicked => {
                PointerScannerViewModelBindings.start_scan(
                    scan_value.get_value_text(),
                    PointerScannerViewModelBindings.active_data_value.display_values.display_values[PointerScannerViewModelBindings.active_display_values.active_display_value_index],
                    PointerScannerViewModelBindings.active_data_value.data_type_ref.data_type_id,
                    10,
                    4096);
            }
            Image {
                width: 16px;
                height: 16px;
                horizontal_alignment: center;
                vertical_alignment: center;
                source: @image_url("../../images/navigation/right_arrow.png");
            }
        }
    }

    DockFocusCatcher { }
}
