import { Theme } from "../../../theme.slint";

import { ProjectExplorerViewModelBindings, ProjectItemViewData } from "../../../view_model_bindings.slint";
import { ContextMenu } from "../../../components/context_menu/context_menu.slint";
import { Button } from "../../../components/buttons/button.slint";
import { TextField } from "../../../components/input/text_field.slint";
import { IconConverter } from "../../../converters/icon_converter.slint";
import { Checkbox } from "../../../components/checkboxes/checkbox.slint";

export component ProjectItemEntry inherits Button {
    in property <ProjectItemViewData> project_view_data;
    in property <length> display_value_splitter_location;
    in property <int> index;
    in property <bool> is_selected;
    callback on_select_start(x: length, y: length);
    callback on_select_end(x: length, y: length);
    height: 24px;
    icon_converter := IconConverter { }

    clicked(event, x, y) => {
        if event.modifiers.shift {
            root.on_select_end(x, y);
        } else {
            root.on_select_start(x, y);
        }
    }
    Rectangle {
        background: root.is_selected ? Theme.selected_background : Theme.transparent;
        Rectangle {
            x: root.project_view_data.indentation * 8px;
            HorizontalLayout {
                padding_left: 8px;
                spacing: 4px;
                VerticalLayout {
                    alignment: center;
                    Checkbox {
                        is_checked: root.project_view_data.is_checked;
                        check_changed(value) => {
                            ProjectExplorerViewModelBindings.set_project_entry_activated(root.project_view_data.path, value);
                        }
                    }
                }

                VerticalLayout {
                    alignment: center;
                    Image {
                        width: 16px;
                        height: 16px;
                        horizontal_alignment: center;
                        vertical_alignment: center;
                        source: icon_converter.icon_view_to_image(icon_converter.icon_id_to_view(root.project_view_data.icon_id));
                    }
                }

                VerticalLayout {
                    alignment: center;
                    Text {
                        color: Theme.foreground;
                        horizontal_alignment: left;
                        vertical_alignment: center;
                        text: root.project_view_data.name;
                    }
                }
            }
        }

        Rectangle {
            x: root.display_value_splitter_location;
            HorizontalLayout {
                padding_left: 8px;
                spacing: 4px;
                VerticalLayout {
                    alignment: center;
                    Text {
                        color: Theme.foreground;
                        horizontal_alignment: left;
                        vertical_alignment: center;
                        text: root.project_view_data.current_display_value;
                    }
                }
            }
        }
    }
}
