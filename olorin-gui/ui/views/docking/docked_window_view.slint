import { Theme } from "../../theme.slint";

import { DockRootViewModelBindings, DockedWindowViewData } from "../../view_model_bindings.slint";
import { DockedWindowTitleBarView } from "docked_window_title_bar_view.slint";
import { DockedWindowFooter } from "docked_window_footer.slint";
import { DockedWindowDropAreas } from "drag_and_drop/docked_window_drop_areas.slint";
import { DockedWindowSplitters } from "docked_window_splitters.slint";
import { DockFocusCatcher } from "drag_and_drop/dock_focus_catcher.slint";

export component DockedWindowView inherits Rectangle {
    in_out property <DockedWindowViewData> docked_window_data;
    property <length> resize_padding: 2px;
    x: root.docked_window_data.position_x;
    y: root.docked_window_data.position_y;
    width: root.docked_window_data.width;
    height: root.docked_window_data.height;
    visible: root.docked_window_data.is_visible && (docked_window_data.tab_ids.length <= 1 || docked_window_data.active_tab_id == docked_window_data.identifier);
    function is_being_dragged() -> bool {
        return docked_window_data.identifier == DockRootViewModelBindings.active_dragged_window_id;
    }
    function is_drop_area_visible() -> bool {
        return DockRootViewModelBindings.active_dragged_window_id != "" //
            && (DockRootViewModelBindings.active_dragged_window_id != root.docked_window_data.identifier || root.docked_window_data.active_tab_id != "");
    }
    VerticalLayout {
        x: resize_padding;
        y: resize_padding;
        width: root.docked_window_data.width - resize_padding * 2;
        height: root.docked_window_data.height - resize_padding * 2;
        spacing: 0px;
        padding: 0px;
        DockedWindowTitleBarView {
            docked_window_data <=> root.docked_window_data;
        }

            // Main content area
            Rectangle {
            background: root.is_being_dragged() && !root.is_drop_area_visible() ? Theme.selected_background : Theme.background_panel;
            border_color: Theme.submenu_border;
            border_radius: 2px;
            border_width: 1px;
            @children
        }

        footer := DockedWindowFooter {
            docked_window_data <=> root.docked_window_data;
        }
    }

    // Splitters
    splitters := DockedWindowSplitters {
        docked_window_data <=> root.docked_window_data;
        resize_padding <=> root.resize_padding;
    }

    DockFocusCatcher { }

    // Drop Area
    drop_area := DockedWindowDropAreas {
        docked_window_data <=> root.docked_window_data;
        resize_padding <=> root.resize_padding;
        footer_padding: footer.height;
        // Visible if:
        // _ We are dragging something AND
        //   _ We are not the same window being dragged UNLESS we are part of a tab group
        //     (as we could be dropping onto ourself to move the window from a tab to a split).
        visible: root.is_drop_area_visible();
    }
}
