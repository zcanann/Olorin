import { HorizontalBox, VerticalBox, Palette, Button } from "std-widgets.slint";
import {Theme} from "../theme.slint";


export global TitleBarAdapter {
    callback close();
    callback maximize();
    callback minimize();
    callback double-clicked();
    callback drag(int, int);
}

export component TitleBarView inherits Rectangle {
    in property <[string]> model: [];
    in property <string> title <=> title.text;
    height: 32px;
    accessible-role: tab;
    Rectangle {
        background: Theme.background;
        title-drag := TouchArea {
            double-clicked => {
                if (self.pressed && self.enabled) {
                    TitleBarAdapter.double-clicked();
                }
            }
            moved => {
                if (self.pressed && self.enabled) {
                    TitleBarAdapter.drag((title-drag.mouse-x - title-drag.pressed-x) / 1px, (title-drag.mouse-y - title-drag.pressed-y) / 1px);
                }
            }
        }

        HorizontalLayout {
            app_icon := Image {
                y: parent.height / 2 - self.height / 2;
                padding-left: 8px;
                width: 24px;
                height: 24px;
                horizontal-alignment: left;
                vertical-alignment: center;
                source: @image-url("../images/app/app_icon.png");
            }

            title := Text {
                y: parent.height / 2 - self.height / 2;
                padding-left: 8px;
                font-size: 13pt;
                color: Theme.foreground;
                vertical-alignment: center;
                horizontal-alignment: left;
            }

            minimize-button := Rectangle {
                y: parent.height / 2 - self.height / 2;
                width: 24px;
                height: 24px;
                minBtn-ta := TouchArea {
                    clicked => {
                        TitleBarAdapter.minimize()
                    }
                }

                Image {
                    source: @image-url("../images/app/minimize.png");
                    animate colorize {
                        duration: 50ms;
                        easing: ease-in-out;
                    }
                    states [
                        hvr when minBtn-ta.has-hover: {
                            colorize: Theme.accent;
                        }
                        nthvr when !minBtn-ta.has-hover: {
                            colorize: Theme.background-lightest;
                        }
                    ]
                }
            }

            maximize-button := Rectangle {
                y: parent.height / 2 - self.height / 2;
                width: 24px;
                height: 24px;
                maxBtn-ta := TouchArea {
                    clicked => {
                        TitleBarAdapter.maximize()
                    }
                }

                Image {
                    source: @image-url("../images/app/maximize.png");
                    animate colorize {
                        duration: 50ms;
                        easing: ease-in-out;
                    }
                    states [
                        hvr when maxBtn-ta.has-hover: {
                            colorize: Theme.accent;
                        }
                        nthvr when !maxBtn-ta.has-hover: {
                            colorize: Theme.background-lightest;
                        }
                    ]
                }
            }

            close-button := Rectangle {
                y: parent.height / 2 - self.height / 2;
                width: 24px;
                height: 24px;
                padding-right: 8px;
                closeBtn-ta := TouchArea {
                    clicked => {
                        TitleBarAdapter.close()
                    }
                }

                Image {
                    source: @image-url("../images/app/close.png");
                    animate colorize {
                        duration: 50ms;
                        easing: ease-in-out;
                    }
                    states [
                        hvr when closeBtn-ta.has-hover: {
                            colorize: Theme.accent;
                        }
                        nthvr when !closeBtn-ta.has-hover: {
                            colorize: Theme.background-lightest;
                        }
                    ]
                }
            }
        }
    }
}
