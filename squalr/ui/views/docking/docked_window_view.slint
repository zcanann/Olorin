import { VerticalBox } from "std-widgets.slint";

import { Theme } from "./../../theme.slint";

import { DockRootViewModelBindings, DockedWindowViewData } from "./../../view_model_bindings.slint";
import { DockedWindowTitleBarView } from "docked_window_title_bar_view.slint";
import { DockedWindowFooter } from "docked_window_footer.slint";
import { DockedWindowDropAreas } from "drag_and_drop/docked_window_drop_areas.slint";
import { DockedWindowSplitters } from "docked_window_splitters.slint";
import { DockFocusCatcher } from "drag_and_drop/dock_focus_catcher.slint";

export component DockedWindowView inherits Rectangle {
    in-out property <DockedWindowViewData> docked-window-data;
    property <length> resize-padding: 2px;
    x: root.docked-window-data.position-x;
    y: root.docked-window-data.position-y;
    width: root.docked-window-data.width;
    height: root.docked-window-data.height;
    visible: root.docked-window-data.is-visible && (docked-window-data.tab-ids.length <= 1 || docked-window-data.active-tab-id == docked-window-data.identifier);
    function is-being-dragged() -> bool {
        return docked-window-data.identifier == DockRootViewModelBindings.active-dragged-window-id;
    }
    function is-drop-area-visible() -> bool {
        return DockRootViewModelBindings.active-dragged-window-id != "" //
            && (DockRootViewModelBindings.active-dragged-window-id != root.docked-window-data.identifier || root.docked-window-data.active-tab-id != "");
    }
    VerticalLayout {
        x: resize-padding;
        y: resize-padding;
        width: root.docked-window-data.width - resize-padding * 2;
        height: root.docked-window-data.height - resize-padding * 2;
        spacing: 0px;
        padding: 0px;
        VerticalBox {
            padding: 0px;
            spacing: 0px;
            DockedWindowTitleBarView {
                docked-window-data <=> root.docked-window-data;
            }

            // Main content area
            Rectangle {
                background: root.is-being-dragged() && !root.is-drop-area-visible() ? Theme.selected-background : Theme.background-panel;
                border-color: Theme.submenu-border;
                border-radius: 2px;
                border-width: 1px;
                @children
            }

            footer := DockedWindowFooter {
                docked-window-data <=> root.docked-window-data;
            }
        }
    }

    // Splitters
    splitters := DockedWindowSplitters {
        docked-window-data <=> root.docked-window-data;
        resize-padding <=> root.resize-padding;
    }

    DockFocusCatcher { }

    // Drop Area
    drop-area := DockedWindowDropAreas {
        docked-window-data <=> root.docked-window-data;
        resize-padding <=> root.resize-padding;
        footer-padding: footer.height;
        // Visible if:
        // - We are dragging something AND
        //   - We are not the same window being dragged UNLESS we are part of a tab group
        //     (as we could be dropping onto ourself to move the window from a tab to a split).
        visible: root.is-drop-area-visible();
    }
}
