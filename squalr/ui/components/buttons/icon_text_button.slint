import { Theme } from "./../../theme.slint";

import { SizeSettings, SpaceSettings, FontSettings, TodoPalette } from "./../styling.slint";
import { FocusTouchArea } from "./../focus_touch_area.slint";
import { StateLayer } from "./../state_layer.slint";
import { Tooltip } from "../tooltips/tooltip.slint";
import { HorizontalBox } from "std-widgets.slint";

export component IconTextButton inherits Rectangle {
    in property <image> icon;
    in property <length> icon-width: 0px;
    in property <length> icon-height: 0px;
    in property <string> text;
    in property <length> text-padding-top: 4px;
    in property <length> text-padding-bottom: 4px;
    in property <length> text-padding-left: 8px;
    in property <length> text-padding-right: 8px;
    in property <TextHorizontalAlignment> text-horizontal-alignment: left;
    in property <TextVerticalAlignment> text-vertical-alignment: center;
    in property <string> tooltip-text;
    callback clicked;
    forward-focus: touch-area;
    touch-area := FocusTouchArea {
        width: 100%;
        height: 100%;
        clicked => {
            root.clicked();
        }
    }

    state-layer := StateLayer {
        width: 100%;
        height: 100%;
        pressed: touch-area.is-pressed || touch-area.enter-pressed;
        has-focus: touch-area.has-focus;
        has-hover: touch-area.has-hover;
    }

    content-layer := HorizontalLayout {
        HorizontalBox {
            padding: 0px;
            spacing: 0px;
            HorizontalLayout {
                alignment: center;
                width: icon-width;
                height: icon-height;
                icon-image := Image {
                    source: root.icon;
                }
            }

            HorizontalLayout {
                padding-top: root.text-padding-top;
                padding-bottom: root.text-padding-bottom;
                padding-left: root.text-padding-left;
                padding-right: root.text-padding-right;
                Text {
                    text: root.text;
                    horizontal-alignment: root.text-horizontal-alignment;
                    vertical-alignment: root.text-vertical-alignment;
                    color: Theme.foreground;
                }
            }
        }
    }

    // TODO
    // if tooltip-text != "" {
       //  tooltip.show();
    // }

    tooltip := Tooltip {
        x: content-layer.x;
        y: content-layer.y + content-layer.height;
        text: root.tooltip-text;
    }
}
