import { Theme } from "./../../theme.slint";
import { HorizontalBox, VerticalBox, Palette } from "std-widgets.slint";
import { ContextMenu } from "./../context_menu/context_menu.slint";
import { Button } from "./../../components/buttons/button.slint";
import { HSeparator } from "./../separator.slint";

export struct ToolbarMenuItemData {
    id: string,
    text: string,
    separator: bool,
}

export component ToolbarMenuItem inherits HorizontalLayout {
    in property <string> text;
    in property <length> parent-toolbar-size;
    in-out property <[ToolbarMenuItemData]> items;
    callback onItemClicked(string);
    text-button := Button {
        clicked => {
            context-menu.show();
        }
        HorizontalLayout {
            padding-left: 8px;
            padding-right: 8px;
            Text {
                horizontal-alignment: center;
                vertical-alignment: center;
                text: root.text;
                color: Theme.foreground;
            }
        }
    }

    context-menu := ContextMenu {
        x: text-button.x;
        y: text-button.y + text-button.height;
        content := VerticalBox {
            padding: 0px;
            spacing: 0px;
            for item in items: VerticalLayout {
                if(item.separator): VerticalBox {
                    padding: 0px;
                    padding-top: 4px;
                    spacing: 4px;
                    HSeparator { }

                    Button {
                        height: 24px;
                        clicked => {
                            root.onItemClicked(item.id);
                        }
                        HorizontalLayout {
                            padding-left: 8px;
                            padding-right: 8px;
                            Text {
                                horizontal-alignment: center;
                                vertical-alignment: center;
                                text: item.text;
                                color: Theme.foreground;
                            }
                        }
                    }
                }
                if(!item.separator): Button {
                    height: 24px;
                    clicked => {
                        root.onItemClicked(item.id);
                    }
                    HorizontalLayout {
                        padding-left: 8px;
                        padding-right: 8px;
                        Text {
                            horizontal-alignment: center;
                            vertical-alignment: center;
                            text: item.text;
                            color: Theme.foreground;
                        }
                    }
                }
            }
        }
    }
}
