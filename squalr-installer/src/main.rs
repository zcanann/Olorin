#![windows_subsystem = "windows"]

pub mod view_models;

use view_models::installer_window::installer_window_view_model::InstallerWindowViewModel;

// Makes the code generated by compiled .slint files available to our Rust code.
slint::include_modules!();

// The general architecture for this project is MVVM: Model - View - ViewModel.
// View: The .slint GUI files.
// Model: The various squalr-engine projects that handle the system/app functionality.
// ViewModel: This squalr project, containing the glue that binds the .slint and engine functionality together.
pub fn main() {
    // Override the default backend (femtovg => software). I wont want to rely on devs having QT installed,
    // and femtovg is shit at rendering font. Skia doesn't install properly on nightly, so software renderer it is.
    unsafe {
        std::env::set_var("SLINT_BACKEND", "winit-software");
    }

    let view_model = InstallerWindowViewModel::new();
    view_model.initialize();
    view_model.show();

    match slint::run_event_loop() {
        Ok(_) => {}
        Err(error) => {
            log::error!("Fatal error starting Squalr Installer GUI: {}", error);
        }
    }
}
